---
import { Image } from "astro:assets";
import GithubIcon from "./icons/GithubIcon.astro"
import RedirectIcon from "./icons/RedirectIcon.astro"

interface Props {
   repository: string
   link: {
      url: string
      name: string
   }
   title: string
   description: string
   imgParameters: {
      img: any
      alt: string
   }
   technologies: string[]
}

const { repository, link, title, description, imgParameters, technologies } = Astro.props;
---

<article class="portfolio-container--card">
   <div class="portfolio--card--tabs">
      <a class="card--tabs__icon" rel="noreferrer" href={repository} target="_blank">
         <GithubIcon />
         Github                  
      </a>
      {link.url ? 
         <a class="card--tabs__icon" rel="noreferrer" href={link.url} target="_blank">
            <RedirectIcon />                     
            {link.name}
         </a> : 
         <p class="card--tabs__icon">
            <RedirectIcon />                       
            {link.name}
         </p>
      }
   </div>
   <div class="portfolio--card--content">
      <h3>{title}</h3>
      <p>{description}</p>
      {imgParameters !== undefined 
         ? <Image 
            src={imgParameters.img} 
            alt={imgParameters.alt}
            quality="high"
            widths={[320, 420, 640]}
            sizes={[320, 420, 640].map((width) => `(max-width: ${width - 120}px) ${width}px`).join(', ')}
         /> 
         : null
      }
      <div class="card--content--technologies">
         <h4>Technologies used:</h4>
         <ul class="content--technologies--list">
            {technologies.map((tech) => <li>{tech}</li>)}
         </ul>
      </div>
   </div>
</article>

<script>
   const buttonElement = document.querySelectorAll('.card--content--description button')
   const dialogElement = document.querySelectorAll('dialog')
   const closeButton = document.querySelectorAll('dialog button')   
   buttonElement?.forEach((element, index) => {
      if (index % 2 === 0) {
         element.addEventListener('click', () => dialogElement[Math.ceil(index / 2)]?.showModal())}
      })

   closeButton.forEach((element, index) => element.addEventListener('click', () => dialogElement[index]?.close()))
</script>

<style is:global>
   .portfolio-container--card {
      container: portfolio-card / inline-size;
      width: 100%;
      min-width: 288px;
      max-width: calc(75ch + 80ch);
      height: fit-content;
      border-radius: 12px;
      margin: 0 auto 32px auto;
      box-shadow: -8px var(--shadow-heavy) 0 #5b67ee;

      @media (prefers-reduced-motion: no-preference) {
         opacity: 0;
      }

      & .portfolio--card--tabs {
         display: flex;
         height: 44px;
         justify-content: flex-start;
         padding-left: 2px;
         background: var(--blue);
         border-radius: 12px 12px 0 0;
         border: var(--border-light);

         & .card--tabs__icon {
            display: flex;
            width: fit-content;
            height: 24px;
            margin-top: 10px;
            margin-left: 6px;
            align-items: center;
            border: 1px solid var(--black);
            border-radius: 6px;
            padding: 2px 4px;
            background: var(--white);
            font-size: 1.2rem;
            text-decoration: none;
            color: var(--black);
            transition: box-shadow 0.5s;

            & svg {
               margin-right: 4px;
            }

            & svg:nth-child(1) {
               stroke: black;
            }
         }

         & .card--tabs__icon:not(a) {
            color: #53535A;

            & svg:nth-child(1) {
               stroke: #53535A;
            }
         }

         & .card--tabs__icon:nth-child(2) {
            width: 100%;
            margin-right: 10px;
         }

         & .card--tabs__icon:hover:not(p), .card--tabs__icon:focus:not(p) {
            outline: none;
            text-decoration: underline;
            box-shadow: var(--shadow-light) var(--shadow-light) 0 var(--black);
            transition: box-shadow 0.5s;
         }
      }

      & .portfolio--card--content {
         display: grid;
         place-items: center;
         padding: 16px;
         gap: 12px;
         border: var(--border-light);
         border-radius: 0 0 12px 12px;
         background: var(--white);

         & h3 {
            font-size: clamp(2.4rem, calc(2vw + 0.5rem), 3.2rem);
         }

         & p {
            width: 100%;
            max-width: 50ch;
            font-size: clamp(1.4rem, calc(2vw + 0.5rem), 1.8rem);
            line-height: 2.4rem;
         }

         & img {
            width: 100%;
            max-width: 480px;
            height: auto;
            aspect-ratio: 16 / 9;
         }

         & h4 {
            font-size: clamp(1.6rem, calc(2vw + 0.5rem), 2rem);
            text-decoration: underline;
         }
         
         & .card--content--technologies {
            display: grid;
            gap: 12px;

            & .content--technologies--list {
               display: flex;
               flex-direction: row;
               flex-wrap: wrap;
               gap: 8px 4px;
   
               & li {
                  display: inline;
                  font-size: clamp(1.4rem, 1.6rem, 1.8rem);
                  border-radius: 12px;
                  background: var(--white);
                  border: 1px solid var(--black);
                  padding: 4px 8px;
               }
            }
         }
      }

      @container portfolio-card (width > 720px) {
         & .portfolio--card--content {
            height: fit-content;
            grid-template-columns: repeat(2, 1fr);
            grid-template-areas:
               "title image"
               "presentation image"
               "technologies technologies";
            place-items: start;
            row-gap: 16px;

            & h3 {
               grid-area: title;
               align-self: flex-end;
            }

            & p {
               grid-area: presentation;
            }

            & img {
               grid-area: image;
            }

            & .card--content--technologies {
               grid-area: technologies;
            }
         }
      }
   }

   @media (width > 680px) {
      .portfolio-container--card .portfolio--card--tabs {
         height: auto;

         & .card--tabs__icon {
            font-size: 1.8rem;
            padding: 2px 4px;
            margin-bottom: 6px;
            height: 36px;
            & svg {
               width: 28px;
               height: 28px;
            }
         }
      }
   }
</style>